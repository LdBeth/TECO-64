co-gcc.lnt                              // Basic gcc configuration

-v                                      // Output messages to stdout
-width(0)                               // Message width (don't break lines)
-HF1                                    // Message height (1 line, w/ file name)

-passes(2)
-A(C2011)                               // Enable ANSI C 2011 standard
-w3                                     // Error, Warning, and Informational messages

+fie                                    // Treat enums and ints as distinct
+fsc                                    // Assume string constants are const char *
+fpn                                    // Warn about use of pointers if possibly NULL
+fas                                    // Allow anonymous structs
+fan                                    // Allow anonymous unions
+fcu                                    // Plain 'char' is unsigned
-ffc                                    // Functions generally don't take custody of pointers\

+libclass(angle, ansi)

// Configuration options for library header files

++"doffsetof(type,member)=((size_t)&((type*)0)->member)"

-d_Noreturn=

-efile(537,limits.h,stdbool.h,ncurses.h,setjmp.h,stdio.h,sys/types.h)

-elibmacro(10,26,48,64)

-elibsym(534)

// Configuration options for TECO files

+e957                                   // Complain about repeated include files

-e606                                   // Non-ANSI escape sequences are OK
-e786                                   // Allow string concatenation within initializer
-e818                                   // Pointer does not need to point to const
-e843                                   // Variable does not need to be const
-e844                                   // Pointer does not need to point to const

-esym(715,unused*)                      // Ignore unused parameters
-esym(534,scan_simple)                  // OK to ignore return value
-esym(534,tprint)                       // OK to ignore return value

// Suppress messages for unused functions and data in conditional code

-esym(714,exec_str,move_dot)
-esym(759,exec_str,move_dot,reset_term,table_8bit)
-esym(765,exec_str,move_dot,reset_term,table_8bit)

-function(exit, throw)                  // throw() works like exit()
